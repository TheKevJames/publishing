version: 2.1

orbs:
  linter: talkiq/linter@1

jobs:
  build-curse-of-strahd:
    docker:
      - image: jpbernius/xelatex
    steps:
      - run: apt-get update -qy
      - run: apt-get install -qy curl zip
      - run:
          name: install tex dependencies
          command: |
            curl -Ls http://mirrors.ctan.org/fonts/aurical/aurical_texmf.zip > /aurical.zip
            unzip /aurical.zip -d $(kpsewhich --var-value TEXMFLOCAL)
            texhash
      - checkout
      - run:
          command: xelatex journal.tex
          working_directory: curse-of-strahd
      - run: mkdir -p build/
      - run: mv curse-of-strahd/journal.pdf build/curse-of-strahd.pdf
      - persist_to_workspace:
          root: build
          paths:
            - curse-of-strahd.pdf
      - store_artifacts:
          path: build/curse-of-strahd.pdf

  build-notes:
    docker:
      - image: jpbernius/xelatex
    steps:
      - run: apt-get update -qy
      - run: apt-get install -qy curl zip
      - run:
          name: install booktabs
          command: |
            curl -Ls http://mirrors.ctan.org/macros/latex/contrib/booktabs.zip > /booktabs.zip
            unzip /booktabs.zip -d $(kpsewhich --var-value TEXMFLOCAL)
      - run:
          name: install listings
          command: |
            curl -Ls http://mirrors.ctan.org/macros/latex/contrib/listings.zip > /listings.zip
            unzip /listings.zip -d $(kpsewhich --var-value TEXMFLOCAL)
      - run:
          name: install mathtools
          command: |
            curl -Ls http://mirrors.ctan.org/macros/latex/contrib/mathtools.zip > /mathtools.zip
            unzip /mathtools.zip -d $(kpsewhich --var-value TEXMFLOCAL)
      - run:
          name: install parskip
          command: |
            curl -Ls http://mirrors.ctan.org/macros/latex/contrib/parskip.zip > /parskip.zip
            unzip /parskip.zip -d $(kpsewhich --var-value TEXMFLOCAL)
      - run:
          name: install pict2e
          command: |
            curl -Ls http://mirrors.ctan.org/macros/latex/contrib/pict2e.zip > /pict2e.zip
            unzip /pict2e.zip -d $(kpsewhich --var-value TEXMFLOCAL)
      - run:
          name: install qtree
          command: |
            curl -Ls http://mirrors.ctan.org/macros/latex/contrib/qtree.zip > /qtree.zip
            unzip /qtree.zip -d $(kpsewhich --var-value TEXMFLOCAL)

            mkdir -p ~/texmf/tex/latex/
            cp -r $(kpsewhich --var-value TEXMFLOCAL)/qtree ~/texmf/tex/latex/
      - run:
          name: install ulem
          command: |
            curl -Ls http://mirrors.ctan.org/macros/latex/contrib/ulem.zip > /ulem.zip
            unzip /ulem.zip -d $(kpsewhich --var-value TEXMFLOCAL)
      - run:
          name: install url
          command: |
            curl -Ls http://mirrors.ctan.org/macros/latex/contrib/url.zip > /url.zip
            unzip /url.zip -d $(kpsewhich --var-value TEXMFLOCAL)
      - run:
          name: install wrapfig
          command: |
            curl -Ls http://mirrors.ctan.org/macros/latex/contrib/wrapfig.zip > /wrapfig.zip
            unzip /wrapfig.zip -d $(kpsewhich --var-value TEXMFLOCAL)
      - run: texhash
      - checkout
      - run:
          name: install custom.sty
          command: |
            mkdir -p ~/texmf/tex/latex/custom
            cp notes-uwaterloo/custom.sty ~/texmf/tex/latex/custom/custom.sty
            texhash
      - run: mkdir -p build/
      - run:
          name: make
          command: |
            make -j2
            find . -name '*.pdf' | xargs -I{} mv {} ../build
          working_directory: notes-uwaterloo
      - store_artifacts:
          path: build/

  upload:
    docker:
      - image: google/cloud-sdk
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /gcloud-service-key.json
    steps:
      - run: echo "${GCLOUD_SERVICE_KEY}" > "${GOOGLE_APPLICATION_CREDENTIALS}"
      - run: gcloud auth activate-service-account --key-file="${GOOGLE_APPLICATION_CREDENTIALS}"
      - run: gcloud config set project "thekevjames-175823"
      - attach_workspace:
          at: build
      - run: gsutil -m cp build/curse-of-strahd.pdf gs://thekevjames-artifacts

workflows:
  run-jobs:
    jobs:
      - linter/pre-commit
      - build-curse-of-strahd
      - build-notes
      - upload:
          filters:
            branches:
              only: master
          requires:
            - build-curse-of-strahd
